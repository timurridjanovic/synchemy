{"version":3,"sources":["../src/client.js"],"names":["messagingManager","client","host","listeners","queue","asyncActions","callListeners","changes","store","loaders","Object","values","forEach","listener","subscribeCallback","prevState","containsChange","entries","change","undefined","isOpen","ws","readyState","OPEN","SynchemyClient","actions","Promise","resolve","reject","WebSocket","onmessage","data","response","JSON","parse","result","messageId","find","m","message","options","updateStore","processResponse","newResult","filter","onerror","error","console","log","onclose","event","code","navigator","onLine","Error","onopen","mapStateToProps","state","callback","shouldUpdate","debounceRender","render","mappedProps","debounce","window","cancelAnimationFrame","requestAnimationFrame","newState","newChanges","listenerId","_","otherListeners","getMessage","newMessage","push","send","stringify","createConnection","actionName","action","getAction","throttle","newAction","methodName","split","map","word","index","toLowerCase","substring","toUpperCase","join","name","loading","synchemy"],"mappings":"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","sourcesContent":["import { v4 as uuid } from 'uuid'\nimport { debounce, throttle } from 'lodash'\n\nconst messagingManager = {\n  client: null,\n  host: null,\n  listeners: {},\n  queue: [],\n  asyncActions: {}\n}\n\nconst callListeners = (listeners, changes, store, loaders) => {\n  Object.values(listeners).forEach(listener => {\n    listener.subscribeCallback(listener.prevState, changes, store, loaders, listener)\n  })\n}\n\nconst containsChange = (changes, prevState) => {\n  for (const change of Object.entries(changes)) {\n    if (change[1] !== undefined && prevState[change[0]] !== change[1]) {\n      return true\n    }\n  }\n\n  return false\n}\n\nconst isOpen = ws => {\n  return ws.readyState === ws.OPEN\n}\n\nclass SynchemyClient {\n  constructor () {\n    this.store = {}\n    this.actions = {}\n    this.asyncActions = {}\n  }\n\n  createConnection ({ host }) {\n    return new Promise((resolve, reject) => {\n      messagingManager.host = host\n      messagingManager.client = new WebSocket(host)\n      messagingManager.client.onmessage = ({ data }) => {\n        const response = JSON.parse(data)\n        const { result, messageId } = response\n        const { resolve, options } = messagingManager.queue.find(m => m.message.messageId === messageId)\n        const { updateStore, processResponse } = options\n        const newResult = processResponse ? processResponse(result) : result\n        if (updateStore !== false) {\n          this.store = { ...this.store, ...newResult }\n          callListeners(messagingManager.listeners, {\n            store: newResult,\n            loaders: messagingManager.asyncActions\n          }, this.store, this.asyncActions)\n        }\n\n        resolve(newResult)\n        messagingManager.queue = messagingManager.queue.filter(m => m.message.messageId !== messageId)\n      }\n\n      messagingManager.client.onerror = error => {\n        console.log('ERROR: ', error)\n      }\n\n      messagingManager.client.onclose = event => {\n        if (event.code !== 1000) {\n          // Error code 1000 means that the connection was closed normally.\n          if (!navigator.onLine) {\n            reject(new Error('You are offline. Please connect to the Internet and try again.'))\n          }\n        }\n      }\n\n      messagingManager.client.onopen = () => {\n        resolve()\n      }\n    })\n  }\n\n  subscribe (mapStateToProps = state => state, callback, shouldUpdate) {\n    const store = this.store\n    const loaders = this.asyncActions\n    const prevState = mapStateToProps(store, loaders)\n    const debounceRender = (render, mappedProps) => {\n      // If there's a pending render, cancel it\n      if (render.debounce) {\n        window.cancelAnimationFrame(render.debounce)\n      }\n      // Setup the new render to run at the next animation frame\n      render.debounce = window.requestAnimationFrame(() => {\n        render(mappedProps)\n      })\n    }\n    const subscribeCallback = (prevState, changes, store, loaders, listener) => {\n      if (listener.shouldUpdate) {\n        const newState = mapStateToProps(store, loaders)\n        if (listener.shouldUpdate(prevState, newState)) {\n          listener.prevState = newState\n          return debounceRender(callback, newState)\n        }\n        return\n      }\n\n      const newChanges = mapStateToProps(changes.store, changes.loaders)\n      if (containsChange(newChanges, prevState)) {\n        const newState = mapStateToProps(store, loaders)\n        listener.prevState = newState\n        return debounceRender(callback, newState)\n      }\n    }\n\n    const listener = { subscribeCallback, prevState, shouldUpdate }\n    const listenerId = uuid()\n    messagingManager.listeners[listenerId] = listener\n    return listenerId\n  }\n\n  unsubscribe (listenerId) {\n    const { [listenerId]: _, ...otherListeners } = messagingManager.listeners\n    messagingManager.listeners = otherListeners\n  }\n\n  send (message, options = {}) {\n    return new Promise((resolve, reject) => {\n      const getMessage = message => {\n        if (typeof message === 'function') {\n          return message(this.store)\n        }\n\n        return message\n      }\n      const newMessage = { ...getMessage(message), messageId: uuid() }\n      messagingManager.queue.push({ message: newMessage, resolve, options })\n      if (isOpen(messagingManager.client)) {\n        messagingManager.client.send(JSON.stringify(newMessage))\n      } else {\n        this.createConnection({ host: messagingManager.host })\n        messagingManager.client.onopen = () => {\n          messagingManager.client.send(JSON.stringify(newMessage))\n        }\n      }\n    })\n  }\n\n  updateStore (state) {\n    if (typeof state === 'function') {\n      const newState = state(this.store)\n      this.store = { ...this.store, ...newState }\n\n      callListeners(messagingManager.listeners, {\n        store: newState, loaders: messagingManager.asyncActions\n      }, this.store, this.asyncActions)\n    } else {\n      this.store = { ...this.store, ...state }\n\n      callListeners(messagingManager.listeners, {\n        store: state,\n        loaders: messagingManager.asyncActions\n      }, this.store, this.asyncActions)\n    }\n  }\n\n  registerAction (actionName, action, options = {}) {\n    const getAction = (action, options) => {\n      if (options.debounce) {\n        return debounce(action, options.debounce)\n      }\n\n      if (options.throttle) {\n        return throttle(action, options.throttle)\n      }\n\n      return action\n    }\n\n    const newAction = getAction(action, options)\n    const methodName = actionName.split('_').map((word, index) => {\n      if (index === 0) {\n        return word.toLowerCase()\n      }\n\n      return `${word.substring(0, 1).toUpperCase()}${word.substring(1).toLowerCase()}`\n    }).join('')\n\n    messagingManager.asyncActions[methodName] = {}\n    this.asyncActions[methodName] = {\n      name: actionName,\n      loading: false\n    }\n\n    this.actions[methodName] = async (...args) => {\n      this.asyncActions[methodName] = {\n        ...this.asyncActions[methodName],\n        loading: true\n      }\n      const changes = {\n        store: {},\n        loaders: {\n          ...messagingManager.asyncActions,\n          [methodName]: { loading: true }\n        }\n      }\n      callListeners(messagingManager.listeners, changes, this.store, this.asyncActions)\n      await newAction(...args)\n      this.asyncActions[methodName] = {\n        ...this.asyncActions[methodName],\n        loading: false\n      }\n      const newChanges = {\n        store: {},\n        loaders: {\n          ...messagingManager.asyncActions,\n          [methodName]: { loading: false }\n        }\n      }\n      callListeners(messagingManager.listeners, newChanges, this.store, this.asyncActions)\n    }\n  }\n}\n\nconst synchemy = new SynchemyClient()\nexport default synchemy\n"],"file":"client.js"}