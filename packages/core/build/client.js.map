{"version":3,"sources":["../src/client.js"],"names":["callListeners","listeners","changes","store","loaders","Object","values","forEach","listener","subscribeCallback","prevState","containsChange","entries","change","undefined","debouncePerAnimationFrame","func","params","debounce","window","cancelAnimationFrame","requestAnimationFrame","isOpen","ws","readyState","OPEN","isConnecting","CONNECTING","SynchemyClient","host","actions","client","onMessage","queue","asyncActions","Error","createConnection","action","registerAction","name","options","WebSocket","onmessage","data","response","JSON","parse","message","messageId","find","m","resolve","updateStore","processResponse","newResult","filter","onclose","event","code","navigator","onLine","mapStateToProps","state","callback","shouldUpdate","newState","newChanges","listenerId","_","otherListeners","Promise","reject","getMessage","newMessage","push","send","stringify","onopen","actionName","getAction","throttle","newAction","methodName","split","map","word","index","toLowerCase","substring","toUpperCase","join","loading"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,KAArB,EAA4BC,OAA5B,EAAwC;AAC5DC,EAAAA,MAAM,CAACC,MAAP,CAAcL,SAAd,EAAyBM,OAAzB,CAAiC,UAAAC,QAAQ,EAAI;AAC3CA,IAAAA,QAAQ,CAACC,iBAAT,CAA2BD,QAAQ,CAACE,SAApC,EAA+CR,OAA/C,EAAwDC,KAAxD,EAA+DC,OAA/D,EAAwEI,QAAxE;AACD,GAFD;AAGD,CAJD;;AAMA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACT,OAAD,EAAUQ,SAAV,EAAwB;AAC7C,qCAAqBL,MAAM,CAACO,OAAP,CAAeV,OAAf,CAArB,qCAA8C;AAAzC,QAAMW,MAAM,sBAAZ;;AACH,QAAIA,MAAM,CAAC,CAAD,CAAN,KAAcC,SAAd,IAA2BJ,SAAS,CAACG,MAAM,CAAC,CAAD,CAAP,CAAT,KAAyBA,MAAM,CAAC,CAAD,CAA9D,EAAmE;AACjE,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD,CARD;;AAUA,IAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,IAAD,EAAOC,MAAP,EAAkB;AAClD;AACA,MAAID,IAAI,CAACE,QAAT,EAAmB;AACjBC,IAAAA,MAAM,CAACC,oBAAP,CAA4BJ,IAAI,CAACE,QAAjC;AACD,GAJiD,CAKlD;;;AACAF,EAAAA,IAAI,CAACE,QAAL,GAAgBC,MAAM,CAACE,qBAAP,CAA6B,YAAM;AACjDL,IAAAA,IAAI,CAACC,MAAD,CAAJ;AACD,GAFe,CAAhB;AAGD,CATD;;AAWA,IAAMK,MAAM,GAAG,SAATA,MAAS,CAAAC,EAAE,EAAI;AACnB,SAAOA,EAAE,CAACC,UAAH,KAAkBD,EAAE,CAACE,IAA5B;AACD,CAFD;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAH,EAAE,EAAI;AACzB,SAAOA,EAAE,CAACC,UAAH,KAAkBD,EAAE,CAACI,UAA5B;AACD,CAFD;;;;IAIMC,c;AAaJ,gCAAqC;AAAA;;AAAA,QAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,4BAAhBC,OAAgB;AAAA,QAAhBA,OAAgB,6BAAN,EAAM;AAAA;AAAA,oDAZ7B,EAY6B;AAAA,sDAX3B,EAW2B;AAAA,2DAVtB,EAUsB;;AAAA;AAAA;AAAA,aATjB;AAClBC,QAAAA,MAAM,EAAE,IADU;AAElBF,QAAAA,IAAI,EAAE,IAFY;AAGlBG,QAAAA,SAAS,EAAE,IAHO;AAIlB/B,QAAAA,SAAS,EAAE,EAJO;AAKlBgC,QAAAA,KAAK,EAAE,EALW;AAMlBC,QAAAA,YAAY,EAAE;AANI;AASiB;;AACnC,QAAI,CAACL,IAAL,EAAW;AACT,YAAM,IAAIM,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,SAAKC,gBAAL,CAAsB;AAAEP,MAAAA,IAAI,EAAJA;AAAF,KAAtB;AAEAxB,IAAAA,MAAM,CAACC,MAAP,CAAcwB,OAAd,EAAuBvB,OAAvB,CAA+B,UAAA8B,MAAM,EAAI;AACvC,MAAA,KAAI,CAACC,cAAL,CAAoBD,MAAM,CAACE,IAA3B,EAAiCF,MAAM,CAACA,MAAxC,EAAgDA,MAAM,CAACG,OAAvD;AACD,KAFD;AAGD;;;;WAED,iCAA4B;AAAA;;AAAA,UAARX,IAAQ,SAARA,IAAQ;AAC1B,sEAAuBA,IAAvB,GAA8BA,IAA9B;AACA,sEAAuBE,MAAvB,GAAgC,IAAIU,SAAJ,CAAcZ,IAAd,CAAhC;;AACA,sEAAuBE,MAAvB,CAA8BW,SAA9B,GAA0C,iBAAc;AAAA,YAAXC,IAAW,SAAXA,IAAW;AACtD,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAjB;AADsD,YAE9CI,OAF8C,GAEvBH,QAFuB,CAE9CG,OAF8C;AAAA,YAErCC,SAFqC,GAEvBJ,QAFuB,CAErCI,SAFqC;;AAGtD,YAAIA,SAAJ,EAAe;AAAA,uCACgB,uCAAA,MAAI,oBAAJ,CAAuBf,KAAvB,CAA6BgB,IAA7B,CAAkC,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACH,OAAF,CAAUC,SAAV,KAAwBA,SAA5B;AAAA,WAAnC,CADhB;AAAA,cACLG,OADK,0BACLA,OADK;AAAA,cACIX,OADJ,0BACIA,OADJ;;AAAA,cAELY,WAFK,GAE4BZ,OAF5B,CAELY,WAFK;AAAA,cAEQC,eAFR,GAE4Bb,OAF5B,CAEQa,eAFR;AAGb,cAAMC,SAAS,GAAGD,eAAe,GAAGA,eAAe,CAACN,OAAD,CAAlB,GAA8BA,OAA/D;;AACA,cAAIK,WAAW,KAAK,KAApB,EAA2B;AACzB,YAAA,MAAI,CAACjD,KAAL,mCAAkB,MAAI,CAACA,KAAvB,GAAiCmD,SAAjC;AACAtD,YAAAA,aAAa,CAAC,uCAAA,MAAI,oBAAJ,CAAuBC,SAAxB,EAAmC;AAC9CE,cAAAA,KAAK,EAAEmD,SADuC;AAE9ClD,cAAAA,OAAO,EAAE,uCAAA,MAAI,oBAAJ,CAAuB8B;AAFc,aAAnC,EAGV,MAAI,CAAC/B,KAHK,EAGE,MAAI,CAAC+B,YAHP,CAAb;AAID;;AAEDiB,UAAAA,OAAO,CAACG,SAAD,CAAP;AACA,iDAAA,MAAI,oBAAJ,CAAuBrB,KAAvB,GAA+B,uCAAA,MAAI,oBAAJ,CAAuBA,KAAvB,CAA6BsB,MAA7B,CAAoC,UAAAL,CAAC;AAAA,mBAAIA,CAAC,CAACH,OAAF,CAAUC,SAAV,KAAwBA,SAA5B;AAAA,WAArC,CAA/B;AACD,SAdD,MAcO;AACL,cAAI,uCAAA,MAAI,oBAAJ,CAAuBhB,SAA3B,EAAsC;AACpC,mDAAA,MAAI,oBAAJ,CAAuBA,SAAvB,CAAiCe,OAAjC;AACD,WAFD,MAEO;AACL,YAAA,MAAI,CAAC5C,KAAL,mCAAkB,MAAI,CAACA,KAAvB,GAAiC4C,OAAjC;AACA/C,YAAAA,aAAa,CAAC,uCAAA,MAAI,oBAAJ,CAAuBC,SAAxB,EAAmC;AAC9CE,cAAAA,KAAK,EAAE4C,OADuC;AAE9C3C,cAAAA,OAAO,EAAE,uCAAA,MAAI,oBAAJ,CAAuB8B;AAFc,aAAnC,EAGV,MAAI,CAAC/B,KAHK,EAGE,MAAI,CAAC+B,YAHP,CAAb;AAID;AACF;AACF,OA5BD;;AA8BA,sEAAuBH,MAAvB,CAA8ByB,OAA9B,GAAwC,UAAAC,KAAK,EAAI;AAC/C,YAAIA,KAAK,CAACC,IAAN,KAAe,IAAnB,EAAyB;AACvB;AACA,cAAI,CAACC,SAAS,CAACC,MAAf,EAAuB;AACrB,kBAAM,IAAIzB,KAAJ,CAAU,gEAAV,CAAN;AACD;AACF;AACF,OAPD;AAQD;;;WAED,qBAAqE;AAAA,UAA1D0B,eAA0D,uEAAxC,UAAAC,KAAK;AAAA,eAAIA,KAAJ;AAAA,OAAmC;AAAA,UAAxBC,QAAwB;AAAA,UAAdC,YAAc;AACnE,UAAM7D,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMC,OAAO,GAAG,KAAK8B,YAArB;AACA,UAAMxB,SAAS,GAAGmD,eAAe,CAAC1D,KAAD,EAAQC,OAAR,CAAjC;;AACA,UAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,SAAD,EAAYR,OAAZ,EAAqBC,KAArB,EAA4BC,OAA5B,EAAqCI,QAArC,EAAkD;AAC1E,YAAIA,QAAQ,CAACwD,YAAb,EAA2B;AACzB,cAAMC,QAAQ,GAAGJ,eAAe,CAAC1D,KAAD,EAAQC,OAAR,CAAhC;;AACA,cAAII,QAAQ,CAACwD,YAAT,CAAsBtD,SAAtB,EAAiCuD,QAAjC,CAAJ,EAAgD;AAC9CzD,YAAAA,QAAQ,CAACE,SAAT,GAAqBuD,QAArB;AACA,mBAAOlD,yBAAyB,CAACgD,QAAD,EAAWE,QAAX,CAAhC;AACD;;AACD;AACD;;AAED,YAAMC,UAAU,GAAGL,eAAe,CAAC3D,OAAO,CAACC,KAAT,EAAgBD,OAAO,CAACE,OAAxB,CAAlC;;AACA,YAAIO,cAAc,CAACuD,UAAD,EAAaxD,SAAb,CAAlB,EAA2C;AACzC,cAAMuD,SAAQ,GAAGJ,eAAe,CAAC1D,KAAD,EAAQC,OAAR,CAAhC;;AACAI,UAAAA,QAAQ,CAACE,SAAT,GAAqBuD,SAArB;AACA,iBAAOlD,yBAAyB,CAACgD,QAAD,EAAWE,SAAX,CAAhC;AACD;AACF,OAhBD;;AAkBA,UAAMzD,QAAQ,GAAG;AAAEC,QAAAA,iBAAiB,EAAjBA,iBAAF;AAAqBC,QAAAA,SAAS,EAATA,SAArB;AAAgCsD,QAAAA,YAAY,EAAZA;AAAhC,OAAjB;AACA,UAAMG,UAAU,GAAG,eAAnB;AACA,sEAAuBlE,SAAvB,CAAiCkE,UAAjC,IAA+C3D,QAA/C;AACA,aAAO2D,UAAP;AACD;;;WAED,qBAAaA,UAAb,EAAyB;AAAA,mCACwB,gEAAuBlE,SAD/C;AAAA,UACDmE,CADC,0BACdD,UADc;AAAA,UACKE,cADL,sEACdF,UADc;AAEvB,sEAAuBlE,SAAvB,GAAmCoE,cAAnC;AACD;;;WAED,mBAAWrD,IAAX,EAAiB;AACf,sEAAuBgB,SAAvB,GAAmChB,IAAnC;AACD;;;WAED,cAAM+B,OAAN,EAA6B;AAAA;;AAAA,UAAdP,OAAc,uEAAJ,EAAI;AAC3B,aAAO,IAAI8B,OAAJ,CAAY,UAACnB,OAAD,EAAUoB,MAAV,EAAqB;AACtC,YAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAzB,OAAO,EAAI;AAC5B,cAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjC,mBAAOA,OAAO,CAAC,MAAI,CAAC5C,KAAN,CAAd;AACD;;AAED,iBAAO4C,OAAP;AACD,SAND;;AAOA,YAAM0B,UAAU,GAAG;AAAE1B,UAAAA,OAAO,EAAEyB,UAAU,CAACzB,OAAD,CAArB;AAAgCC,UAAAA,SAAS,EAAE;AAA3C,SAAnB;AACA,+CAAA,MAAI,oBAAJ,CAAuBf,KAAvB,CAA6ByC,IAA7B,CAAkC;AAAE3B,UAAAA,OAAO,EAAE0B,UAAX;AAAuBtB,UAAAA,OAAO,EAAPA,OAAvB;AAAgCX,UAAAA,OAAO,EAAPA;AAAhC,SAAlC;;AACA,YAAIlB,MAAM,CAAC,uCAAA,MAAI,oBAAJ,CAAuBS,MAAxB,CAAV,EAA2C;AACzC,iDAAA,MAAI,oBAAJ,CAAuBA,MAAvB,CAA8B4C,IAA9B,CAAmC9B,IAAI,CAAC+B,SAAL,CAAeH,UAAf,CAAnC;AACD,SAFD,MAEO;AACL,cAAI,CAAC/C,YAAY,CAAC,uCAAA,MAAI,oBAAJ,CAAuBK,MAAxB,CAAjB,EAAkD;AAChD,YAAA,MAAI,CAACK,gBAAL,CAAsB;AAAEP,cAAAA,IAAI,EAAE,uCAAA,MAAI,oBAAJ,CAAuBA;AAA/B,aAAtB;AACD;;AAED,iDAAA,MAAI,oBAAJ,CAAuBE,MAAvB,CAA8B8C,MAA9B,GAAuC,YAAM;AAC3C,mDAAA,MAAI,oBAAJ,CAAuB9C,MAAvB,CAA8B4C,IAA9B,CAAmC9B,IAAI,CAAC+B,SAAL,CAAeH,UAAf,CAAnC;AACD,WAFD;AAGD;AACF,OArBM,CAAP;AAsBD;;;WAED,qBAAaX,KAAb,EAAoB;AAClB,UAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC/B,YAAMG,QAAQ,GAAGH,KAAK,CAAC,KAAK3D,KAAN,CAAtB;AACA,aAAKA,KAAL,mCAAkB,KAAKA,KAAvB,GAAiC8D,QAAjC;AAEAjE,QAAAA,aAAa,CAAC,gEAAuBC,SAAxB,EAAmC;AAC9CE,UAAAA,KAAK,EAAE8D,QADuC;AAC7B7D,UAAAA,OAAO,EAAE,gEAAuB8B;AADH,SAAnC,EAEV,KAAK/B,KAFK,EAEE,KAAK+B,YAFP,CAAb;AAGD,OAPD,MAOO;AACL,aAAK/B,KAAL,mCAAkB,KAAKA,KAAvB,GAAiC2D,KAAjC;AAEA9D,QAAAA,aAAa,CAAC,gEAAuBC,SAAxB,EAAmC;AAC9CE,UAAAA,KAAK,EAAE2D,KADuC;AAE9C1D,UAAAA,OAAO,EAAE,gEAAuB8B;AAFc,SAAnC,EAGV,KAAK/B,KAHK,EAGE,KAAK+B,YAHP,CAAb;AAID;AACF;;;WAED,wBAAgB4C,UAAhB,EAA4BzC,MAA5B,EAAkD;AAAA;;AAAA,UAAdG,OAAc,uEAAJ,EAAI;;AAChD,UAAMuC,SAAS,GAAG,SAAZA,SAAY,CAAC1C,MAAD,EAASG,OAAT,EAAqB;AACrC,YAAIA,OAAO,CAACtB,QAAZ,EAAsB;AACpB,iBAAO,sBAASmB,MAAT,EAAiBG,OAAO,CAACtB,QAAzB,CAAP;AACD;;AAED,YAAIsB,OAAO,CAACwC,QAAZ,EAAsB;AACpB,iBAAO,sBAAS3C,MAAT,EAAiBG,OAAO,CAACwC,QAAzB,CAAP;AACD;;AAED,eAAO3C,MAAP;AACD,OAVD;;AAYA,UAAM4C,SAAS,GAAGF,SAAS,CAAC1C,MAAD,EAASG,OAAT,CAA3B;AACA,UAAM0C,UAAU,GAAGJ,UAAU,CAACK,KAAX,CAAiB,GAAjB,EAAsBC,GAAtB,CAA0B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5D,YAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,iBAAOD,IAAI,CAACE,WAAL,EAAP;AACD;;AAED,yBAAUF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,WAArB,EAAV,SAA+CJ,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBD,WAAlB,EAA/C;AACD,OANkB,EAMhBG,IANgB,CAMX,EANW,CAAnB;AAQA,sEAAuBxD,YAAvB,CAAoCgD,UAApC,IAAkD,EAAlD;AACA,WAAKhD,YAAL,CAAkBgD,UAAlB,IAAgC;AAC9B3C,QAAAA,IAAI,EAAEuC,UADwB;AAE9Ba,QAAAA,OAAO,EAAE;AAFqB,OAAhC;AAKA,WAAK7D,OAAL,CAAaoD,UAAb,+FAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB,gBAAA,MAAI,CAAChD,YAAL,CAAkBgD,UAAlB,oCACK,MAAI,CAAChD,YAAL,CAAkBgD,UAAlB,CADL;AAEES,kBAAAA,OAAO,EAAE;AAFX;AAIMzF,gBAAAA,OALmB,GAKT;AACdC,kBAAAA,KAAK,EAAE,EADO;AAEdC,kBAAAA,OAAO,kCACF,uCAAA,MAAI,oBAAJ,CAAuB8B,YADrB,4CAEJgD,UAFI,EAES;AAAES,oBAAAA,OAAO,EAAE;AAAX,mBAFT;AAFO,iBALS;AAYzB3F,gBAAAA,aAAa,CAAC,uCAAA,MAAI,oBAAJ,CAAuBC,SAAxB,EAAmCC,OAAnC,EAA4C,MAAI,CAACC,KAAjD,EAAwD,MAAI,CAAC+B,YAA7D,CAAb;AAZyB;AAAA,uBAanB+C,SAAS,MAAT,eAbmB;;AAAA;AAczB,gBAAA,MAAI,CAAC/C,YAAL,CAAkBgD,UAAlB,oCACK,MAAI,CAAChD,YAAL,CAAkBgD,UAAlB,CADL;AAEES,kBAAAA,OAAO,EAAE;AAFX;AAIMzB,gBAAAA,UAlBmB,GAkBN;AACjB/D,kBAAAA,KAAK,EAAE,EADU;AAEjBC,kBAAAA,OAAO,kCACF,uCAAA,MAAI,oBAAJ,CAAuB8B,YADrB,4CAEJgD,UAFI,EAES;AAAES,oBAAAA,OAAO,EAAE;AAAX,mBAFT;AAFU,iBAlBM;AAyBzB3F,gBAAAA,aAAa,CAAC,uCAAA,MAAI,oBAAJ,CAAuBC,SAAxB,EAAmCiE,UAAnC,EAA+C,MAAI,CAAC/D,KAApD,EAA2D,MAAI,CAAC+B,YAAhE,CAAb;;AAzByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA3B;AA2BD;;;;;eAGYN,c","sourcesContent":["import { v4 as uuid } from 'uuid'\nimport { debounce, throttle } from 'lodash'\n\nconst callListeners = (listeners, changes, store, loaders) => {\n  Object.values(listeners).forEach(listener => {\n    listener.subscribeCallback(listener.prevState, changes, store, loaders, listener)\n  })\n}\n\nconst containsChange = (changes, prevState) => {\n  for (const change of Object.entries(changes)) {\n    if (change[1] !== undefined && prevState[change[0]] !== change[1]) {\n      return true\n    }\n  }\n\n  return false\n}\n\nconst debouncePerAnimationFrame = (func, params) => {\n  // If there's a pending function call, cancel it\n  if (func.debounce) {\n    window.cancelAnimationFrame(func.debounce)\n  }\n  // Setup the new function call to run at the next animation frame\n  func.debounce = window.requestAnimationFrame(() => {\n    func(params)\n  })\n}\n\nconst isOpen = ws => {\n  return ws.readyState === ws.OPEN\n}\n\nconst isConnecting = ws => {\n  return ws.readyState === ws.CONNECTING\n}\n\nclass SynchemyClient {\n  store = {}\n  actions = {}\n  asyncActions = {}\n  #messagingManager = {\n    client: null,\n    host: null,\n    onMessage: null,\n    listeners: {},\n    queue: [],\n    asyncActions: {}\n  }\n\n  constructor ({ host, actions = {} }) {\n    if (!host) {\n      throw new Error('You must provide a host to connect to.')\n    }\n\n    this.createConnection({ host })\n\n    Object.values(actions).forEach(action => {\n      this.registerAction(action.name, action.action, action.options)\n    })\n  }\n\n  createConnection ({ host }) {\n    this.#messagingManager.host = host\n    this.#messagingManager.client = new WebSocket(host)\n    this.#messagingManager.client.onmessage = ({ data }) => {\n      const response = JSON.parse(data)\n      const { message, messageId } = response\n      if (messageId) {\n        const { resolve, options } = this.#messagingManager.queue.find(m => m.message.messageId === messageId)\n        const { updateStore, processResponse } = options\n        const newResult = processResponse ? processResponse(message) : message\n        if (updateStore !== false) {\n          this.store = { ...this.store, ...newResult }\n          callListeners(this.#messagingManager.listeners, {\n            store: newResult,\n            loaders: this.#messagingManager.asyncActions\n          }, this.store, this.asyncActions)\n        }\n\n        resolve(newResult)\n        this.#messagingManager.queue = this.#messagingManager.queue.filter(m => m.message.messageId !== messageId)\n      } else {\n        if (this.#messagingManager.onMessage) {\n          this.#messagingManager.onMessage(message)\n        } else {\n          this.store = { ...this.store, ...message }\n          callListeners(this.#messagingManager.listeners, {\n            store: message,\n            loaders: this.#messagingManager.asyncActions\n          }, this.store, this.asyncActions)\n        }\n      }\n    }\n\n    this.#messagingManager.client.onclose = event => {\n      if (event.code !== 1000) {\n        // Error code 1000 means that the connection was closed normally.\n        if (!navigator.onLine) {\n          throw new Error('You are offline. Please connect to the Internet and try again.')\n        }\n      }\n    }\n  }\n\n  subscribe (mapStateToProps = state => state, callback, shouldUpdate) {\n    const store = this.store\n    const loaders = this.asyncActions\n    const prevState = mapStateToProps(store, loaders)\n    const subscribeCallback = (prevState, changes, store, loaders, listener) => {\n      if (listener.shouldUpdate) {\n        const newState = mapStateToProps(store, loaders)\n        if (listener.shouldUpdate(prevState, newState)) {\n          listener.prevState = newState\n          return debouncePerAnimationFrame(callback, newState)\n        }\n        return\n      }\n\n      const newChanges = mapStateToProps(changes.store, changes.loaders)\n      if (containsChange(newChanges, prevState)) {\n        const newState = mapStateToProps(store, loaders)\n        listener.prevState = newState\n        return debouncePerAnimationFrame(callback, newState)\n      }\n    }\n\n    const listener = { subscribeCallback, prevState, shouldUpdate }\n    const listenerId = uuid()\n    this.#messagingManager.listeners[listenerId] = listener\n    return listenerId\n  }\n\n  unsubscribe (listenerId) {\n    const { [listenerId]: _, ...otherListeners } = this.#messagingManager.listeners\n    this.#messagingManager.listeners = otherListeners\n  }\n\n  onMessage (func) {\n    this.#messagingManager.onMessage = func\n  }\n\n  send (message, options = {}) {\n    return new Promise((resolve, reject) => {\n      const getMessage = message => {\n        if (typeof message === 'function') {\n          return message(this.store)\n        }\n\n        return message\n      }\n      const newMessage = { message: getMessage(message), messageId: uuid() }\n      this.#messagingManager.queue.push({ message: newMessage, resolve, options })\n      if (isOpen(this.#messagingManager.client)) {\n        this.#messagingManager.client.send(JSON.stringify(newMessage))\n      } else {\n        if (!isConnecting(this.#messagingManager.client)) {\n          this.createConnection({ host: this.#messagingManager.host })\n        }\n\n        this.#messagingManager.client.onopen = () => {\n          this.#messagingManager.client.send(JSON.stringify(newMessage))\n        }\n      }\n    })\n  }\n\n  updateStore (state) {\n    if (typeof state === 'function') {\n      const newState = state(this.store)\n      this.store = { ...this.store, ...newState }\n\n      callListeners(this.#messagingManager.listeners, {\n        store: newState, loaders: this.#messagingManager.asyncActions\n      }, this.store, this.asyncActions)\n    } else {\n      this.store = { ...this.store, ...state }\n\n      callListeners(this.#messagingManager.listeners, {\n        store: state,\n        loaders: this.#messagingManager.asyncActions\n      }, this.store, this.asyncActions)\n    }\n  }\n\n  registerAction (actionName, action, options = {}) {\n    const getAction = (action, options) => {\n      if (options.debounce) {\n        return debounce(action, options.debounce)\n      }\n\n      if (options.throttle) {\n        return throttle(action, options.throttle)\n      }\n\n      return action\n    }\n\n    const newAction = getAction(action, options)\n    const methodName = actionName.split('_').map((word, index) => {\n      if (index === 0) {\n        return word.toLowerCase()\n      }\n\n      return `${word.substring(0, 1).toUpperCase()}${word.substring(1).toLowerCase()}`\n    }).join('')\n\n    this.#messagingManager.asyncActions[methodName] = {}\n    this.asyncActions[methodName] = {\n      name: actionName,\n      loading: false\n    }\n\n    this.actions[methodName] = async (...args) => {\n      this.asyncActions[methodName] = {\n        ...this.asyncActions[methodName],\n        loading: true\n      }\n      const changes = {\n        store: {},\n        loaders: {\n          ...this.#messagingManager.asyncActions,\n          [methodName]: { loading: true }\n        }\n      }\n      callListeners(this.#messagingManager.listeners, changes, this.store, this.asyncActions)\n      await newAction(...args)\n      this.asyncActions[methodName] = {\n        ...this.asyncActions[methodName],\n        loading: false\n      }\n      const newChanges = {\n        store: {},\n        loaders: {\n          ...this.#messagingManager.asyncActions,\n          [methodName]: { loading: false }\n        }\n      }\n      callListeners(this.#messagingManager.listeners, newChanges, this.store, this.asyncActions)\n    }\n  }\n}\n\nexport default SynchemyClient\n"],"file":"client.js"}